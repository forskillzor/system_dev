
ГЛАВА 9 УСОВЕРШЕНСТВОВАННЫЙ ПРОГРАММИРУЕМЫЙ КОНТРОЛЛЕР ПРЕРЫВАНИЯ (APIC) 



Усовершенствованный программируемый контроллер прерываний (APIC), упоминаемый в следующих разделах как local APIC, был введен в процессоры IA-32 с процессором Pentium (см. Раздел 17.27, «Усовершенствованный программируемый контроллер прерываний (APIC)») и включен в комплект поставки.  в семействе P6, Pentium 4, процессоры Intel Xeon и другие более поздние семейства процессоров Intel 64 и IA-32 (см. Раздел 9.4.2, «Наличие локальной APIC»). Локальный APIC выполняет две основные функции для процессора:

  * Он получает прерывания от контактов прерываний процессора,
    от внутренних источников и от внешнего I/O APIC (или другого
    внешнего контроллера прерываний). Он отправляет
    их в ядро процессора для обработки.

  * В многопроцессорных (MP) системах он отправляет и получает
    сообщения межпроцессорных прерываний (IPI) на другие логические
    процессоры на системной шине и от них. Сообщения IPI могут
    использоваться для распределения прерываний между процессорами
    в системе или для выполнения общесистемных функций (таких как
    загрузка процессоров или распределение работы между группами
    процессоров).

Внешний I/O APIC является частью системного чипсета Intel. Его основная функция заключается в получении внешних событий прерывания от системы и связанных с ней устройств ввода-вывода и ретрансляции их на local APIC в качестве сообщений прерывания. В системах MP APIC ввода / вывода также предоставляет механизм для распределения внешних прерываний на локальные APIC выбранных процессоров или групп процессоров на системной шине.  

В этой главе дается описание локального APIC и его интерфейса программирования. Он также предоставляет обзор интерфейса между local APIC и I/O APIC. Обратитесь в Intel за подробной информацией о APIC ввода / вывода.

Когда local APIC отправляет прерывание на свое ядро процессора для обработки, процессор использует механизм обработки прерываний и исключений, описанный в главе 5 «Обработка прерываний и исключений». См. Раздел 5.1, «Обзор прерываний и исключений», для введения в обработку прерываний и исключений.
            


            9.1 ОБЗОР ЛОКАЛЬНОГО И I/O APIC.



Каждый local APIC состоит из набора регистров APIC (см. Таблицу 9-1) и соответствующего аппаратного обеспечения, которое контролирует доставку прерываний в ядро процессора и генерацию сообщений IPI. Регистры APIC отображены в памяти и могут быть считаны и записаны с использованием инструкции MOV.

Локальные APIC могут получать прерывания из следующих источников:

  * Локольно подключенныеустройства ввода-вывода - Эти прерывания
    возникают как фронт или уровень, заявленные устройством ввода-вывода,
    которое подключено непосредственно к местным контактам прерываний
    процессора (LINT0 и LINT1). Устройства ввода-вывода также могут
    быть подключены к контроллеру прерываний типа 8259, который, в свою
    очередь, подключен к процессору через один из локальных контактов
    прерывания.

  * Внешне подключенные устройства ввода-вывода - Эти прерывания
    возникают как фронт или уровень, заявленные устройством
    ввода-вывода, которое подключено к входным контактам прерывания
    I/O APIC.  Прерывания отправляются как сообщения прерывания
    ввода-вывода от I/O APIC одному или нескольким процессорам
    в системе.

  * Межпроцессорные прерывания (IPI) - Процессор Intel 64 или IA-32
    может использовать механизм IPI для прерывания другого процессора
    или группы процессоров на системной шине. IPI используются для
    программных автоматических прерываний, пересылки прерываний или
    упреждающего планирования.

  * Прерывания генерируемые таймером APIC - Локальный таймер APIC
    может быть запрограммирован на отправку локального прерывания на
    связанный с ним процессор при достижении запрограммированного
    счета (см. Раздел 9.6.4, «Таймер APIC»).

  * Счетчик прерываний мониторинга производительности - Процессоры
    семейства P6, Pentium 4 и Intel Xeon позволяют отправлять прерывания
    на связанный с ним процессор при переполнении счетчика мониторинга
    производительности (см. Раздел 18.18.6.8, «Создание прерывания
    при переполнении»).

  * Прерывания типературного датчика - Процессоры Pentium 4 и Intel Xeon
    позволяют отправлять прерывания самим себе при срабатывании
    внутреннего термодатчика (см. Раздел 13.5.2, «Мониторинг температуры»).

  * Прерывания внутренних ошибок APIC - Когда в local APIC распознается
    состояние ошибки (например, попытка получить доступ к невыполненному
    регистру), APIC можно запрограммировать на отправку прерывания на
    связанный с ним процессор (см. Раздел 9.6.3, «Обработка ошибок»).

Из этих источников прерываний: выводы процессора LINT0 и LINT1, таймер APIC, счетчики контроля производительности, термодатчик и внутренний детектор ошибок APIC называются локальными источниками прерываний. Получив сигнал от локального источника прерываний, local APIC доставляет прерывание ядру процессора, используя протокол доставки прерываний, который был настроен через группу регистров APIC, называемых локальной векторной таблицей или LVT (см. Раздел 9.6.1, «Локальная векторная таблица»).  Для каждого локального источника прерываний предусмотрена отдельная запись в локальной векторной таблице, которая позволяет настроить конкретный протокол доставки прерываний для каждого источника. Например, если вывод LINT1 будет использоваться в качестве вывода NMI, запись LINT1 в таблице локальных векторов может быть настроена для доставки прерывания с вектором номер 2 (прерывание NMI) в ядро процессора.

Локальный APIC обрабатывает прерывания от двух других источников прерываний (внешних устройств ввода-вывода и IPI) через свои средства обработки сообщений IPI.

Процессор может генерировать IPI путем программирования регистра команд прерывания (ICR) в своей локальной APIC (см. Раздел 9.7.1, «Регистр команд прерывания (ICR)»). В результате записи в ICR генерируется и отправляется сообщение IPI на системной шине (для процессоров Pentium 4 и Intel Xeon) или на шине APIC (для процессоров семейства Pentium и P6). См. Раздел 9.2, "Системная шина против. APIC Bus. "

IPI могут быть отправлены на другие процессоры в системе или на исходный процессор (самопрерывания). Когда целевой процессор получает сообщение IPI, его local APIC обрабатывает сообщение автоматически (используя информацию, включенную в сообщение, такую как номер вектора и режим запуска [trigger mode]). См. Раздел 9.7, «Выдача межпроцессорных прерываний», для подробного объяснения механизма доставки и приема сообщений API локального APIC.

Локальный APIC также может получать прерывания от подключенных извне устройств через I/O APIC (см. Рисунок 9-1). I/O APIC отвечает за прием прерываний, генерируемых системным оборудованием и устройствами ввода-вывода, и пересылку их на local APIC в виде сообщений прерывания.



  Рисонок 9-1. Взаимодействие Local APIC and I/O APIC в Однопроцессорной системе. 



          Pentium4 and                          Pentium and P6
          Intel Xeon Processors               Family Processors
          ____________________                __________________
          | Processor Core   |                | Processor Core |
          |__________________|                |________________|
          | Local APIC       |                |  Local APIC    |
          |__________________|                |________________|
            ^             ^                     ^            ^
Interrupts  | Interrupts  | Local               | Interrupts | Local     
Messages    | Messages    | Interrupts          | Messages   | Interrupts
            v                                   v
  <-------------------------->            <--------------------------------->
Interrupts  ^   System bus                              ^   3-Wire APIC Bus
Messages    |                                           |
  __________|____________________            ___________|____________         
  |         v  System chip Set  |            |          v           |     
  |   __________                |            |    _____________     |               
  |   | Bridge |                |            |    | I/O APIC  | <------- External 
  |   |________|                |            |    |___________| <------- Interrupts
  |          ^                  |            |                      |   
  |          |                  |            |   System Chip Set    |   
  |          v      PCI         |            |______________________|   
  |   <---------------------->  |                                       
  |                  ^          |                                       
  |                  |          |                                         
  |                  v          |                                         
  |           ______________    |                                         
  |           | I/O APIC   | <------- External                            
  |           |____________| <------- Interrupts                          
  |_____________________________|                                         



Отдельные выводы на входе-выходе APIC могут быть запрограммированы для генерирования определенного вектора прерывания при его утверждении. I/O APIC также имеет «виртуальный проводной режим», который позволяет ему обмениваться данными со стандартным внешним контроллером прерываний в стиле 8259A. Обратите внимание, что local APIC может быть отключен (см. Раздел 9.4.3, «Включение или отключение локального APIC»). Это позволяет соответствующему ядру процессора получать прерывания непосредственно от контроллера прерываний 8259A.

Как local APIC, так и I/O APIC предназначены для работы в MP системах(см. Рисунки 9-2 и 9-3). Каждый local APIC обрабатывает прерывания от I/O APIC, IPI от процессоров на системной шине и автоматически генерируемые прерывания. Прерывания также могут доставляться отдельным процессорам через локальные контакты прерываний; однако этот механизм обычно не используется в системах MP.



  Рисунок 9-2. Local APIC и I/O APIC процессры XEON в мультипроцессорной системе.



       Processor #1             Processor #2             Processor #3                 
  _____________________      _____________________      _____________________    
  |       CPU         |      |       CPU         |      |       CPU         |       
  |___________________|      |___________________|      |___________________|           
  |   Local APIC      |      |   Local APIC      |      |   Local APIC      |           
  |___________________|      |___________________|      |___________________|           
           ^  ^                       ^  ^                       ^  ^        
Interrupt  |  | IPIs       Interrupt  |  | IPIs       Interrupt  |  | IPIs              
Messages   |  |            Messages   |  |            Messages   |  |                   
           v  v                       v  v                       v  v                     
  <------------------------------------------------------------------------->  
                ^                     Processor System Bus                            
                |                                                             
       _________|__________________________                                   
       |        |                         |                                   
       |        v                         |                                   
       |     _____________                |                                   
       |     |   Bridge  |                |                                   
       |     |___________|                |                                   
       |           ^                      |                                   
       |           |                      |                                   
       |           v   PCI                |                                   
       |    <----------------------->     |                                   
       |                   ^              |                                   
       |                   |              |                                   
       |                   v              |                                   
       |               _____________      |                                   
       |               | I/O APIC  | <-------- External                       
       |               |___________| <-------- Interrupts                     
       | System Chip Set                  |                                   
       |__________________________________|                                   
                                                                              
        

  Рисунок 9-3. Local APIC и I/O APIC P6 семейство процессоров в мультипроцессорной
               системе.


                                                                                    
       Processor #1             Processor #2             Processor #3                 
  _____________________      _____________________      _____________________    
  |       CPU         |      |       CPU         |      |       CPU         |       
  |___________________|      |___________________|      |___________________|           
  |   Local APIC      |      |   Local APIC      |      |   Local APIC      |           
  |___________________|      |___________________|      |___________________|           
           ^  ^                       ^  ^                       ^  ^        
Interrupt  |  | IPIs       Interrupt  |  | IPIs       Interrupt  |  | IPIs              
Messages   |  |            Messages   |  |            Messages   |  |                   
           v  v                       v  v                       v  v                     
  <------------------------------------------------------------------------->  
                                  ^            Processor System Bus     
                                  |                                         
                         _________|__________________________               
                         |        |                         |               
                         |        v                         |               
                         |      ____________                |               
          External    --------> | I/O APIC |                |               
          Interrupts  --------> |__________|                |               
                         |                                  |               
                         |                                  |               
                         | System Chip Set                  |               
                         |__________________________________|               


Механизм IPI обычно используется в системах MP для отправки фиксированных прерываний (прерываний для определенного векторного числа) и специальных прерываний процессорам на системной шине. Например, local APIC может использовать IPI для пересылки фиксированного прерывания на другой процессор для обслуживания. Специальные IPI (включая NMI, INIT, SMI и SIPI IPI) позволяют одному или нескольким процессорам на системной шине выполнять общесистемные функции загрузки и управления.

Следующие разделы посвящены локальному APIC и его реализации в процессорах семейства Pentium 4, Intel Xeon и P6. В этих разделах термины «local APIC» и «APIC ввода-вывода» относятся к "локальныму" и "I/O" APIC, используемым с процессорами семейства P6, а также к локальныму и I/O xAPIC, используемым с процессорами Pentium 4 и Intel Xeon (см. Раздел 9.3, «Внешняя APIC Intel® 82489DX, APIC, xAPIC и X2APIC»).



    9.2 Системная шина и шина APIC.



Для процессоров семейства P6 и Pentium, I/O APIC и local APIC обмениваются данными через 3-проводную внутреннюю шину APIC (см. Рисунок 9-3). Local APIC также используют шину APIC для отправки и получения IPI. Шина APIC и ее сообщения невидимы для программного обеспечения и не классифицируются как архитектурные.

Начиная с процессоров Pentium 4 и Intel Xeon, I/O APIC и local APIC (с использованием архитектуры xAPIC) обмениваются данными через системную шину (см. Рис. 9-2). I/O APIC отправляет запросы прерывания процессорам на системной шине через аппаратное обеспечение моста, которое является частью Intel Chip Set. Оборудование моста генерирует сообщения прерывания, которые отправляются на локальные APIC. IPI между локальными APIC передаются непосредственно по системной шине.



    9.3 Intel 82489DX внешний APIC. APIC XAPIC и X2APIC.



Local APIC в семействе P6 и процессорах Pentium является архитектурным подмножеством внешнего APIC Intel® 82489DX. См. Раздел 17.27.1, «Видимые программные различия между локальным APIC и 82489DX».

Архитектура APIC, используемая в процессорах Pentium 4 и Intel Xeon (называемая архитектурой xAPIC), является расширением архитектуры APIC, используемой в процессорах семейства P6. Основное различие между архитектурами APIC и xAPIC заключается в том, что с архитектурой xAPIC local APIC и I/O APIC обмениваются данными через системную шину. Благодаря архитектуре APIC они обмениваются данными через шину APIC (см. Раздел 9.2, «Системная шина против шины APIC»). Кроме того, некоторые архитектурные особенности APIC были расширены и/или изменены в архитектуре xAPIC.

Архитектура x2APIC унаследована от архитектуры xAPIC. Расширения архитектуры xAPIC предназначены в первую очередь для повышения адресуемости процессора.  Архитектура x2APIC обеспечивает обратную совместимость с архитектурой xAPIC и расширяемость для будущих инноваций платформы Intel. Эти расширения и модификации отмечены в следующих разделах.



    9.4 Local APIC.



В следующих разделах описывается архитектура локального APIC и способы его обнаружения, идентификации и определения его статуса. Описания того, как программировать локальный APIC, приведены в Разделе 9.6.1, «Таблица локальных векторов» и Разделе 9.7.1, «Регистр команд прерывания (ICR)».



    9.4.1 Диаграмма Local APIC.



Рисунок 9-4 дает функциональную блок-схему для local APIC. Программное обеспечение взаимодействует с local APIC, читая и записывая его регистры.  Регистры APIC отображаются в памяти в область размером 4 КБ физического адресного пространства процессора с начальным адресом FEE00000H.  Для корректной работы APIC это адресное пространство должно быть сопоставлено с областью памяти, которая была обозначена как строго не кэшируемая (UC). См. Раздел 10.3 «Доступные методы кэширования».

В MP системных конфигурациях регистры APIC для процессоров Intel 64 или IA-32 на системной шине изначально отображаются в той же области размером 4 Кбайт физического адресного пространства. Программное обеспечение имеет возможность изменить начальное отображение на другую область 4 КБ для всех local APIC или сопоставить регистры APIC для каждой локальной APIC с ее собственной областью 4 КБ. Раздел 9.4.5, «Перемещение локальных регистров APIC», описывает, как переместить базовый адрес для регистров APIC.

На процессорах, поддерживающих архитектуру x2APIC (обозначается CPUID.01H: ECX [21] = 1), локальный APIC поддерживает работу в режиме xAPIC (как описано в разделе 9.4. Кроме того, программное обеспечение может разрешить локальной APIC работать в режиме x2APIC для расширенной процесорной адрессации.  (см. раздел 9.5).



                                Замечание.


    Для процессоров семейства P6, Pentium 4 и Intel Xeon APIC
    обрабатывает все обращения к памяти по адресам в пределах
    4-килобайтного пространства регистров APIC, и внешние циклы
    шины не создаются. Для процессоров Pentium с встроенной
    микросхемой APIC производятся циклы шины для доступа к
    регистровому пространству APIC. Таким образом, для программного
    обеспечения, предназначенного для работы на процессорах Pentium,
    системное программное обеспечение должно явно не отображать
    пространство регистров APIC в обычную системную память.
    Это может привести к генерированию недопустимого исключения
    кода операции (#UD) или к непредсказуемому выполнению.



    Рисунок 9-4 Структура Local APIC.



                                  DATA/ADDR
                                      ^                                              
              ____________________    |      ____________________        
              | Version Register |--->|<---- |   EOI Register   |        
              |__________________|    |      |__________________|        
                                      |      ________________________                      
                     Timer            |<---- |Task Priority Register|                      
              ____________________    |      |______________________|                      
              |   Current Count  |    |                 |
           ___|      Register    |    |      ___________v____________
           |  |__________________|    |<---- |  Processor Priority  |     INTA       From
           |  |   Initial Count  |    |      |      Register        | _____________  CPU
           |  |      Register    |<-->|      |______________________| |              Core
           |  |__________________|    |        ^        |             |   INTR              
           |  | Divide Configuration  |        |   _____v_____________v__----------> To
           |  |    Register      |    |        |   |   Priorititizer    | EXTINIT    CPU
           |  |__________________|    |        |   |____________________|----------> Core
           |                          |        |             ^                         
           |   Local Vector Table     |     .................|....................    
           |  ____________________    |     .________________|___________________. 
           |  |      Timer       |    |     .|   in-Service Register (ISR)      |. 
           |->|__________________|    |     .|__________________________________|.
              |      Local       |    |<---->| Interrupt Request Register (IRR) |. 
  LINT0/1 --->|  Interrupts 0,1  |    |     .|__________________________________|.
              |__________________|    |     .|    Trigger Mode Register (TMR)   |. 
 Perf.Mon.    |   Performance    |<-->|     .|__________________________________|. 
 (Internal--->|Monitoring Counters[1] |     ...................^..............^... 
 Interrupt)   |__________________|    |   Vec[3:0] & TMR Bit   |              |  Register
 (Internal--->|   Termal Sensor[2]    |       ______________   |   ___________|__Select
 Interrupt)   |__________________|    |       |  Arb. ID   |   |   |   Vector   |  
           |->|      Error       |    |       |  Register[4]   |   |   Decode   |
           |  |__________________|    |       |____________|   |   |____________|  
           |                          |                        |       ^         
           |  ____________________    |  Local         ________|_______|___    
           |  |   Error Status   |    |  Interrupts--->| Acceptance Logic |      
           |__|     Register     |<-->|                |__________________|           
              |__________________|    |                        ^  Dest. Mode & Vector 
                                      |                ________|___________         
              ____________________    |                |   Protocol       |------> To
              |     APIC ID      |    |                | Translation Logic| INIT   CPU
              |     Register     |    |                |__________________| NMI    Core
              |__________________|    |                   ^             ^   SMI
              | Logical Destionation  |                   |             |           
              |     Register     |    |      _____________v_________    |         
              |__________________|<-->|      |  Interrupt Command  |    |         
              | Destination Format    |<---->|      Register       |    |         
              |     Register     |    |      |_____________________|    |         
              |__________________|    |                                 |        
              | Spurious Vector  |    |                                 |          
              |     Register     |    |                                 |  
              |__________________|    |                                 v            
                                      |                      Processor System Bus[3]
                                      v                                              
                                                                               
[1] Введено в семействе процессоров P6.                                   
[2] Введено в Pentium4 и Intel Xeon процессорах.                         
[3] Трех проводная шина APIC в P6 и Intel Xeon процессорах.             
[4] Не реализовано в процессорах Pentium 4 и Intel Xeon.             
                                                                      
В таблице 9-1 показано, как регистры APIC отображаются в пространство регистров APIC размером 4 КБ. Регистры имеют ширину 32, 64 или 256 бит; все выровнены по 128-битным границам. Все 32-битные регистры должны быть доступны с использованием 128-битных выровненных 32-битных загрузок или сохранений. Некоторые процессоры могут поддерживать загрузки и созранения менее 32 бит в некоторых регистрах APIC. Это поведение зависит от модели и не гарантирует работу на всех процессорах. Любой доступ FP / MMX / SSE к регистру APIC или любой доступ, который касается байтов с 4 по 15 регистра APIC, может вызвать неопределенное поведение и не должен выполняться. Это неопределенное поведение может включать зависания, неправильные результаты или непредвиденные исключения, в том числе проверки компьютера, и может варьироваться в зависимости от реализации. Доступ к более широким регистрам (64-разрядным или 256-разрядным) должен осуществляться с использованием нескольких 32-разрядных загрузок или созранений, причем все обращения должны быть выровнены по 128-разрядному.                                                                                      

    Таблица 9-1 Адрессное отображение Local APIC.

______________________________________________________________________
Address     Register Name                         Software Read/Write
_______________________________________________________________________
fee0 0000h  Reserved
fee0 0010h  Reserved
fee0 0020h  Local APIC ID Register                         Read/Write.
fee0 0030h  Local APIC Varsion Register                    Read Only.
fee0 0040h  Reserved                                       
fee0 0060h  Reserved                                       
fee0 0070h  Reserved                                       
fee0 0080h  Reserved                                       
fee0 0090h  Task Priority Register(TPR)                    Read/Write.
fee0 00a0h  Arbitration Priotity Register(APR)             Read Only.
fee0 00b0h  Process Priority Register(PPR)                 Read Only.
fee0 00c0h  EOI Register                                   Write Only.
fee0 00d0h  Reserved                                       
fee0 00e0h  Logical Destination Register                   Read/Write
fee0 00f0h  Destination Format Register                    Bits 0-27 Read only;
                                                           Bits 28-31 Read/Write.
fee0 00f0h  Spurious Interrupt Vector Register             Bits 0-8 Read/Write
                                                           bits 9-31 Read Only.
fee0 0100h  In-Service Register(ISR);                      Read Only. 
FEE0 0110H  In-Service Register (ISR); bits 32:63          Read Only.
FEE0 0120H  In-Service Register (ISR); bits 64:95          Read Only.
FEE0 0130H  In-Service Register (ISR); bits 96:127         Read Only.
FEE0 0140H  In-Service Register (ISR); bits 128:159        Read Only.
FEE0 0150H  In-Service Register (ISR); bits 160:191        Read Only.
FEE0 0160H  In-Service Register (ISR); bits 192:223        Read Only.
FEE0 0170H  In-Service Register (ISR); bits 224:255        Read Only.
FEE0 0180H  Trigger Mode Register (TMR); bits 0:31         Read Only.
FEE0 0180H  Trigger Mode Register (TMR); bits 32:63        Read Only.
FEE0 01A0H  Trigger Mode Register (TMR); bits 64:95        Read Only.
FEE0 01B0H  Trigger Mode Register (TMR); bits 96:127       Read Only.
FEE0 01C0H  Trigger Mode Register (TMR); bits 128:159      Read Only.
FEE0 01D0H  Trigger Mode Register (TMR); bits 160:191      Read Only.
FEE0 01E0H  Trigger Mode Register (TMR); bits 192:223      Read Only.
FEE0 01F0H  Trigger Mode Register (TMR); bits 224:255      Read Only.
FEE0 0200H  Interrupt Request Register (IRR); bits 0:31    Read Only.
FEE0 0210H  Interrupt Request Register (IRR); bits32:63    Read Only.
FEE0 0220H  Interrupt Request Register (IRR); bits 64:95   Read Only.
FEE0 0230H  Interrupt Request Register (IRR); bits 96:127  Read Only.
FEE0 0240H  Interrupt Request Register (IRR); bits 128:159 Read Only.
FEE0 0250H  Interrupt Request Register (IRR); bits 160:191 Read Only.
FEE0 0260H  Interrupt Request Register (IRR); bits 192:223 Read Only.
FEE0 0270H  Interrupt Request Register (IRR); bits 224:255 Read Only.
FEE0 0280H  Error Status Register                          Read Only. 
FEE0 0290H  Reserved
through
FEE0 02E0H  

FEE0 02F0H  LVT CMCI Registers                             Read/Write.
FEE0 0300H  Interrupt Command Register (ICR); bits 0-31    Read/Write.
FEE0 0310H  Interrupt Command Register (ICR); bits 32-63   Read/Write.
FEE0 0320H  LVT Timer Register                             Read/Write.
FEE0 0330H LVT Thermal Sensor Register[2]                  Read/Write.
FEE0 0340H LVT Performance Monitoring Counters Register[3] Read/Write.
FEE0 0350H LVT LINT0 Register                              Read/Write.
FEE0 0360H LVT LINT1 Register                              Read/Write.
FEE0 0370H LVT Error Register                              Read/Write.
FEE0 0380H Initial Count Register (for Timer)              Read/Write.
FEE0 0390H Current Count Register (for Timer)              Read Only.
FEE0 03A0H 
through
FEE0 03D0H Reserved
FEE0 03E0H Divide Configuration Register (for Timer)       Read/Write.
FEE0 03F0H Reserved                                        
______________________________________________________________________

Примечания:

[1] Не поддерживается процессорами Pentium 4 и Intel Xeon.

[2] Представлены в процессорах Pentium 4 и Intel Xeon. Этот регистр APIC
    и связанная с ним функция зависят от реализации и могут отсутствовать
    в будущих процессорах IA-32 или Intel 64.

[3] Представлен в процессоре Pentium Pro. Этот регистр APIC и связанная
    с ним функция зависят от реализации и могут отсутствовать в будущих
    процессорах IA-32 или Intel 64.
______________________________________________________________________



    9.4.2 Наличие Local APIC.



Начиная с процессоров семейства P6, наличие или отсутствие локального APIC на кристалле можно обнаружить с помощью инструкции CPUID. Когда инструкция CPUID выполняется с операндом-источником 1 в регистре EAX, бит 9 флагов функций CPUID, возвращаемых в регистр EDX, указывает на наличие (установлено) или отсутствие (очищено) локального APIC.



    9.4.3 Включение или отключения local APIC.



Local APIC может быть включен или отключен одним из двух способов:

1. Используя глобальный флаг включения / отключения APIC в MSR IA32_APIC_BASE (адрес MSR 1BH; см. Рисунок 9-5):

  - Когда IA32_APIC_BASE [11] равен 0, процессор функционально
    эквивалентен процессору IA-32 без встроенной микросхемы APIC.
    Флаг функции CPUID для APIC (см. Раздел 9.4.2, «Наличие локальной
    APIC») также установлен на 0.

  - Когда IA32_APIC_BASE [11] установлен в 0, процессорные APIC на
    основе 3-проводной шины APIC, как правило, не могут быть повторно
    включены до тех пор, пока не произойдет сброс аппаратного обеспечения
    системы. Трехпроводная шина теряет дорожку арбитража, которая
    необходима для полного повторного включения. Определенные
    функциональные возможности APIC могут быть включены (например,
    производительность и генерация прерываний контроля температуры).

  - Для процессоров, использующих доставку прерываний с помощью
    Front Side Bus (FSB), программное обеспечение может отключить или
    включить APIC путем установки и сброса IA32_APIC_BASE [11].
    Аппаратный сброс не требуется для перезапуска функциональности APIC,
    если программное обеспечение гарантирует, что прерывание не будет
    отправлено на APIC после очистки IA32_APIC_BASE [11].

  - Когда IA32_APIC_BASE [11] установлен в 0, предварительная
    инициализация APIC может быть потеряна, и APIC может вернуться в
    состояние, описанное в Разделе 9.4.7.1, «Локальное состояние APIC
    после включения питания или сброса».

2. Использование флага включения / выключения программного обеспечения
    APIC в регистре векторов паразитных прерываний (см. Рисунок 9-31):

  - Если IA32_APIC_BASE [11] равен 1, программное обеспечение может
    временно отключить локальный APIC в любое время, сняв флаг 
    включения / выключения программного обеспечения APIC в регистре
    векторов побочных прерываний (см. Рисунок 9-31). Состояние локального
    APIC, находящегося в этом состоянии с отключенным программным
    обеспечением, описано в разделе 9.4.7.2, «Состояние локального APIC
    после того, как оно было отключено программным обеспечением».

  - Когда локальный APIC находится в состоянии программного отключения,
    его можно в любой момент повторно включить, установив флаг
    включения / выключения программного обеспечения APIC в 1.

Для процессора Pentium вывод APICEN (который используется совместно с выводом PICD1) используется во время включения питания или RESET для отключения локального APIC.

Обратите внимание, что каждая запись в LVT имеет бит маски, который можно использовать для запрета доставки прерываний в процессор от выбранных локальных источников прерываний (выводы LINT0 и LINT1, таймер APIC, счетчики контроля производительности, термодатчик, и / или внутренний детектор ошибок APIC).
